<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>Capa – Configuration API示例</title>
    <link>https://reactivegroup.github.io/capa.io/en/docs/examples/configuration/</link>
    <description>Recent content in Configuration API示例 on Capa</description>
    <generator>Hugo -- gohugo.io</generator>
    <lastBuildDate>Thu, 05 Jan 2017 00:00:00 +0000</lastBuildDate>
    
	  <atom:link href="https://reactivegroup.github.io/capa.io/en/docs/examples/configuration/index.xml" rel="self" type="application/rss+xml" />
    
    
      
        
      
    
    
    <item>
      <title>Docs: Configuration AWS-App Config示例</title>
      <link>https://reactivegroup.github.io/capa.io/en/docs/examples/configuration/configuration-aws-example/</link>
      <pubDate>Fri, 15 Oct 2021 00:00:00 +0000</pubDate>
      
      <guid>https://reactivegroup.github.io/capa.io/en/docs/examples/configuration/configuration-aws-example/</guid>
      <description>
        
        
        

&lt;div class=&#34;pageinfo pageinfo-primary&#34;&gt;
&lt;p&gt;This is a placeholder page. Replace it with your own content.&lt;/p&gt;

&lt;/div&gt;

&lt;p&gt;TODO&lt;/p&gt;

      </description>
    </item>
    
    <item>
      <title>Docs: Configuration Ctrip-Qconfig示例</title>
      <link>https://reactivegroup.github.io/capa.io/en/docs/examples/configuration/configuration-ctrip-example/</link>
      <pubDate>Fri, 15 Oct 2021 00:00:00 +0000</pubDate>
      
      <guid>https://reactivegroup.github.io/capa.io/en/docs/examples/configuration/configuration-ctrip-example/</guid>
      <description>
        
        
        &lt;h2 id=&#34;调用逻辑&#34;&gt;调用逻辑&lt;/h2&gt;
&lt;p&gt;&lt;img src=&#34;https://raw.githubusercontent.com/reactivegroup/capa.io/master/content/images/zh/docs/Example/Configuration/configuration_ctrip.png&#34; alt=&#34;configuration_in_ctrip&#34;&gt;&lt;/p&gt;
&lt;p&gt;ps:Service(appid:123)为举例，表示一个应用id为123的服务，下面直接缩写成ServiceA&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;ServiceA:服务调用方&lt;/li&gt;
&lt;li&gt;ServiceA通过调用Capa SDK中统一规范制定的Capa Configuration API发起该应用的配置管理请求&lt;/li&gt;
&lt;li&gt;找到通过SPI机制注册Capa Configuration API的Ctrip实现类，并执行相关逻辑&lt;/li&gt;
&lt;li&gt;Configuration API内部关于Ctrip的实现，底层调用Qconfig API进行相应的配置管理&lt;/li&gt;
&lt;li&gt;获取Qconfig Service返回的数据，并一路返回给服务调用方ServiceA&lt;/li&gt;
&lt;li&gt;ServiceA获取相关配置操作的结果，实现应用级别的配置管理&lt;/li&gt;
&lt;/ul&gt;
&lt;h2 id=&#34;实现步骤&#34;&gt;实现步骤&lt;/h2&gt;
&lt;ol&gt;
&lt;li&gt;
&lt;p&gt;针对携程全家桶的设施基础现状下，选型Qconfig为应用级别配置管理组件&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;继承&lt;a href=&#34;https://github.com/reactivegroup/capa/blob/master/sdk-spi/src/main/java/group/rxcloud/capa/spi/configstore/CapaConfigStoreSpi.java&#34;&gt;CapaConfigStoreSpi&lt;/a&gt;抽象类，底层通过对Qconfig的封装，实现相应的Configuration API&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;通过SPI机制引入相关实现类。具体流程为:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;引入相关实现类的jar包&lt;/li&gt;
&lt;li&gt;在项目resources路径下，新增capa-component.properties文件。在文件中新增属性key:“group.rxcloud.capa.component.configstore.CapaConfigStore”，value:“实现类的全路径”。示例如下:&lt;/li&gt;
&lt;/ul&gt;
&lt;pre tabindex=&#34;0&#34;&gt;&lt;code class=&#34;language-properties&#34; data-lang=&#34;properties&#34;&gt;//capa-component.properties文件
group.rxcloud.capa.component.configstore.CapaConfigStore=group.rxcloud.capa.spi.demo.configstore.DemoCapaConfigStore
&lt;/code&gt;&lt;/pre&gt;&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;调用方通过使用Capa统一规范的Configuration API即可完成对应用级别配置的管理需求。&lt;/p&gt;
&lt;/li&gt;
&lt;/ol&gt;

      </description>
    </item>
    
  </channel>
</rss>
